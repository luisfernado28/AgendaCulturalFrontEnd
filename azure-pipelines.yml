# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
trigger:
- release
resources:
- repo: self
variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '99ed89d0-daae-446c-aafa-cc688ddaa4bf'
  imageRepository: 'reactagenda'
  containerRegistry: 'agendaculturalcontainerregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: latestLocal #'$(Build.BuildId)' should use build tag
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build ubuntu with qt 5.12.4 installed
      inputs:
        command: build
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        dockerfile: $(dockerfilePath)
        tags: $(tag)
        arguments: '--build-arg Endpoint=$(BackEndpoint2) --build-arg BlobAPI=$(BlobAPI) --build-arg StoreToken=$(StorageSasToken) --build-arg MapsAPI=$(MAPSAPI)  --build-arg ResourceName=$(StorageResource)'
    - task: Docker@2
      displayName: Push ubuntu with qt 5.12.4 installed
      inputs:
        command: push
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)
    
  - deployment: VMDeploy
    displayName: web
    environment:
      name:  PresVM
      resourceType: VirtualMachine
      tags: prod
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo my first deployment
                    cd agendaCultural
                    touch file1.txt

    # - task: Docker@2
    #   displayName: Build and push an image to container registry
    #   inputs:
    #     command: buildAndPush
    #     repository: $(imageRepository)
    #     dockerfile: $(dockerfilePath)
    #     containerRegistry: $(dockerRegistryServiceConnection)
    #     tags: |
    #       $(tag)